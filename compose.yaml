# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
name: telemetry-app
services:
  server:
    build:
      context: .
      target: final
    ports:
      - "6969:6969"
    environment:
      # - ASPNETCORE_HTTPS_PORTS=6969
      # - ASPNETCORE_HTTP_PORTS=696
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:6969
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      - ~/.aspnet/https:/https:ro
    networks:
      - node-network
    
  mongodb:
    image: mongo:latest
    container_name: db
    ports:
      - '27017:27017'
    environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - dbdata6:/data/db
    networks:
      - node-network
volumes:
  dbdata6:  
networks:
  node-network:
    driver: bridge

